{"version":3,"file":"static/js/66.f53c8716.chunk.js","mappings":"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","sources":["pages/Login.js","utils/api.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { fetchFromApi as apiFetch } from '../utils/api';\r\n\r\nfunction Login() {\r\n  const [email, setEmail] = useState('');\r\n  const [password, setPassword] = useState('');\r\n  const [loading, setLoading] = useState(false);\r\n  const [error, setError] = useState(null);\r\n  const [success, setSuccess] = useState(false);\r\n  const [userName, setUserName] = useState('');\r\n  const navigate = useNavigate();\r\n\r\n  const handleSubmit = async e => {\r\n    e.preventDefault();\r\n    setLoading(true);\r\n    setError(null);\r\n    try {\r\n      const data = await apiFetch('/api/auth/login', {\r\n        method: 'POST',\r\n        headers: { 'Content-Type': 'application/json' },\r\n        body: JSON.stringify({ email, password })\r\n      });\r\n      localStorage.setItem('token', data.token);\r\n      if (data.user) {\r\n        localStorage.setItem('user', JSON.stringify(data.user));\r\n        setUserName(data.user.name);\r\n      }\r\n      setSuccess(true);\r\n      setTimeout(() => {\r\n        if (data.user && data.user.role === 'admin') {\r\n          navigate('/admin');\r\n        } else {\r\n          navigate('/');\r\n        }\r\n        // Notify other components (like Navbar) that auth state has changed\r\n        window.dispatchEvent(new Event('authChange'));\r\n      }, 2500);\r\n    } catch (err) {\r\n      setError('Invalid email or password');\r\n    }\r\n    setLoading(false);\r\n  };\r\n\r\n  return (\r\n    <div\r\n      style={{\r\n        minHeight: '100vh',\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n        background: `url('/images/bground.jpg') center center / cover no-repeat`,\r\n        position: 'relative',\r\n      }}\r\n    >\r\n      <div style={{\r\n        background: 'rgba(255,255,255,0.10)', // more transparent\r\n        borderRadius: 16,\r\n        boxShadow: '0 4px 32px rgba(0,0,0,0.10)',\r\n        padding: '2rem 1.5rem 1.5rem',\r\n        minWidth: 280,\r\n        maxWidth: 340,\r\n        width: '100%',\r\n        backdropFilter: 'blur(18px)', // stronger blur\r\n        WebkitBackdropFilter: 'blur(18px)',\r\n        border: '1.5px solid rgba(255,255,255,0.25)',\r\n      }}>\r\n        <h1 style={{ color: '#222', fontWeight: 800, fontSize: '2.2rem', marginBottom: '1.5rem', textAlign: 'center' }}>Login</h1>\r\n        {loading && <p style={{ textAlign: 'center', color: '#888' }}>Logging in...</p>}\r\n        {error && <p style={{ color: 'red', textAlign: 'center' }}>{error}</p>}\r\n        {success ? (\r\n          <div style={{ textAlign: 'center' }}>\r\n            <p style={{ color: '#222', fontWeight: 700, fontSize: '1.2rem' }}>Welcome to Sabor Espa√±ol, {userName}!</p>\r\n            <p style={{ color: '#555', marginTop: 8 }}>Redirecting you now...</p>\r\n          </div>\r\n        ) : (\r\n          <form onSubmit={handleSubmit} style={{ display: 'flex', flexDirection: 'column', gap: 18 }}>\r\n            <label style={{ fontWeight: 600, marginBottom: 4 }}>Email</label>\r\n            <input type=\"email\" value={email} onChange={e => setEmail(e.target.value)} required style={{ padding: '0.7em 1em', borderRadius: 8, border: '1px solid #ddd', fontSize: '1rem', marginBottom: 8 }} />\r\n            <label style={{ fontWeight: 600, marginBottom: 4 }}>Password</label>\r\n            <input type=\"password\" value={password} onChange={e => setPassword(e.target.value)} required style={{ padding: '0.7em 1em', borderRadius: 8, border: '1px solid #ddd', fontSize: '1rem', marginBottom: 8 }} />\r\n            <button type=\"submit\" style={{ background: '#FFD700', color: '#222', border: 'none', borderRadius: 8, padding: '0.7em 1.5em', fontWeight: 700, fontSize: '1.1rem', marginTop: 8, cursor: 'pointer' }}>Login</button>\r\n            <div style={{ textAlign: 'center', marginTop: 12 }}>\r\n              <span style={{ color: '#555', fontSize: '0.98rem' }}>Don't have an account? <a href=\"/register\" style={{ color: '#FFD700', fontWeight: 700, textDecoration: 'none' }}>Register</a></span>\r\n            </div>\r\n          </form>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Login;\r\n","// Basic API utility for making requests\r\n// You can customize this as needed for your project\r\n\r\nconst API_BASE_URL = process.env.REACT_APP_API_BASE_URL || 'https://sabor-espanol-ed87.onrender.com';\r\n\r\nexport async function fetchFromApi(endpoint, options = {}) {\r\n  const res = await fetch(`${API_BASE_URL}${endpoint}`, {\r\n    credentials: 'include',\r\n    ...options,\r\n  });\r\n  if (!res.ok) {\r\n    // Try to parse the error response from the server\r\n    try {\r\n      const errorData = await res.json();\r\n      // Create a new error object with the server's message\r\n      const error = new Error(errorData.message || `API error: ${res.status}`);\r\n      error.data = errorData; // Attach full error data\r\n      throw error;\r\n    } catch (e) {\r\n      // If parsing fails, throw a generic error\r\n      throw new Error(`API error: ${res.status}`);\r\n    }\r\n  }\r\n  return res.json();\r\n}\r\n"],"names":["email","setEmail","useState","password","setPassword","loading","setLoading","error","setError","success","setSuccess","userName","setUserName","navigate","useNavigate","_jsx","style","minHeight","display","alignItems","justifyContent","background","position","children","_jsxs","borderRadius","boxShadow","padding","minWidth","maxWidth","width","backdropFilter","WebkitBackdropFilter","border","color","fontWeight","fontSize","marginBottom","textAlign","marginTop","onSubmit","async","e","preventDefault","data","apiFetch","method","headers","body","JSON","stringify","localStorage","setItem","token","user","name","setTimeout","role","window","dispatchEvent","Event","err","flexDirection","gap","type","value","onChange","target","required","cursor","href","textDecoration","API_BASE_URL","process","fetchFromApi","endpoint","options","arguments","length","undefined","res","fetch","concat","_objectSpread","credentials","ok","errorData","json","Error","message","status"],"sourceRoot":""}