{"version":3,"file":"static/js/390.3ac5b873.chunk.js","mappings":"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","sources":["pages/Register.js","utils/api.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { fetchFromApi as apiFetch } from '../utils/api';\r\n\r\nfunction Register() {\r\n  // Country code mapping\r\n  // Moved inside useEffect to avoid dependency warning\r\n  const [name, setName] = useState('');\r\n  const [email, setEmail] = useState('');\r\n  const [password, setPassword] = useState('');\r\n  const [phone, setPhone] = useState('');\r\n  const [country, setCountry] = useState('');\r\n\r\n  // Update phone prefix when country changes\r\n  React.useEffect(() => {\r\n    const countryCodes = {\r\n      Tanzania: '+255',\r\n      Kenya: '+254',\r\n      Uganda: '+256',\r\n      Rwanda: '+250',\r\n      Burundi: '+257',\r\n      'South Africa': '+27',\r\n      Nigeria: '+234',\r\n      Ghana: '+233',\r\n    };\r\n    if (country && countryCodes[country]) {\r\n      if (!phone.startsWith(countryCodes[country])) {\r\n        setPhone(prev => countryCodes[country] + (prev.replace(/^\\+\\d+/, '')));\r\n      }\r\n    }\r\n  }, [country, phone]);\r\n  const [loading, setLoading] = useState(false);\r\n  const [error, setError] = useState(null);\r\n  const [success, setSuccess] = useState(false);\r\n  const navigate = useNavigate();\r\n\r\n  const handleSubmit = async e => {\r\n    e.preventDefault();\r\n    setLoading(true);\r\n    setError(null);\r\n    try {\r\n      const data = await apiFetch('/api/auth/register', {\r\n        method: 'POST',\r\n        headers: { 'Content-Type': 'application/json' },\r\n        body: JSON.stringify({ name, email, password, phone, country })\r\n      });\r\n      if (data.token) {\r\n        localStorage.setItem('token', data.token);\r\n      }\r\n      if (data.user) {\r\n        localStorage.setItem('user', JSON.stringify(data.user));\r\n      }\r\n      setSuccess(true);\r\n      setTimeout(() => {\r\n        navigate('/');\r\n        // Notify other components (like Navbar) that auth state has changed\r\n        window.dispatchEvent(new Event('authChange'));\r\n      }, 2500); // Redirect to home after 2.5s\r\n    } catch (err) {\r\n      setError('Registration failed');\r\n    }\r\n    setLoading(false);\r\n  };\r\n\r\n  return (\r\n    <div\r\n      style={{\r\n        minHeight: '100vh',\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n        background: `url('/images/sliding barner2.jpg') center center / cover no-repeat`,\r\n        position: 'relative',\r\n      }}\r\n    >\r\n      <div style={{\r\n        background: 'rgba(255,255,255,0.10)', // more transparent\r\n        borderRadius: 16,\r\n        boxShadow: '0 4px 32px rgba(0,0,0,0.10)',\r\n        padding: '2rem 1.5rem 1.5rem', // smaller padding\r\n        minWidth: 280, // smaller min width\r\n        maxWidth: 340, // smaller max width\r\n        width: '100%',\r\n        backdropFilter: 'blur(18px)', // stronger blur\r\n        WebkitBackdropFilter: 'blur(18px)',\r\n        border: '1.5px solid rgba(255,255,255,0.25)',\r\n      }}>\r\n        <h1 style={{ color: '#222', fontWeight: 800, fontSize: '2.2rem', marginBottom: '1.5rem', textAlign: 'center' }}>Register</h1>\r\n        {loading && <p style={{ textAlign: 'center', color: '#888' }}>Registering...</p>}\r\n        {error && <p style={{ color: 'red', textAlign: 'center' }}>{error}</p>}\r\n        {success ? (\r\n          <div style={{ textAlign: 'center' }}>\r\n            <p style={{ color: '#222', fontWeight: 700, fontSize: '1.2rem' }}>Welcome to Sabor Espa√±ol, {name}!</p>\r\n            <p style={{ color: '#555', marginTop: 8 }}>Redirecting you now...</p>\r\n          </div>\r\n        ) : (\r\n          <form onSubmit={handleSubmit} style={{ display: 'flex', flexDirection: 'column', gap: 18 }}>\r\n            <label style={{ fontWeight: 600, marginBottom: 4 }}>Name</label>\r\n            <input type=\"text\" value={name} onChange={e => setName(e.target.value)} required style={{ padding: '0.7em 1em', borderRadius: 8, border: '1px solid #ddd', fontSize: '1rem', marginBottom: 8 }} />\r\n            <label style={{ fontWeight: 600, marginBottom: 4 }}>Email</label>\r\n            <input type=\"email\" value={email} onChange={e => setEmail(e.target.value)} required style={{ padding: '0.7em 1em', borderRadius: 8, border: '1px solid #ddd', fontSize: '1rem', marginBottom: 8 }} />\r\n            <label style={{ fontWeight: 600, marginBottom: 4 }}>Phone Number</label>\r\n            <input type=\"tel\" value={phone} onChange={e => setPhone(e.target.value)} required style={{ padding: '0.7em 1em', borderRadius: 8, border: '1px solid #ddd', fontSize: '1rem', marginBottom: 8 }} placeholder=\"Enter your phone number\" />\r\n            <label style={{ fontWeight: 600, marginBottom: 4 }}>Country</label>\r\n            <select value={country} onChange={e => setCountry(e.target.value)} required style={{ padding: '0.7em 1em', borderRadius: 8, border: '1px solid #ddd', fontSize: '1rem', marginBottom: 8 }}>\r\n              <option value=\"\">Select Country</option>\r\n              <option value=\"Tanzania\">Tanzania</option>\r\n              <option value=\"Kenya\">Kenya</option>\r\n              <option value=\"Uganda\">Uganda</option>\r\n              <option value=\"Rwanda\">Rwanda</option>\r\n              <option value=\"Burundi\">Burundi</option>\r\n              <option value=\"South Africa\">South Africa</option>\r\n              <option value=\"Nigeria\">Nigeria</option>\r\n              <option value=\"Ghana\">Ghana</option>\r\n              <option value=\"Other\">Other</option>\r\n            </select>\r\n            <label style={{ fontWeight: 600, marginBottom: 4 }}>Password</label>\r\n            <input type=\"password\" value={password} onChange={e => setPassword(e.target.value)} required style={{ padding: '0.7em 1em', borderRadius: 8, border: '1px solid #ddd', fontSize: '1rem', marginBottom: 8 }} />\r\n            <button type=\"submit\" style={{ background: '#FFD700', color: '#222', border: 'none', borderRadius: 8, padding: '0.7em 1.5em', fontWeight: 700, fontSize: '1.1rem', marginTop: 8, cursor: 'pointer' }}>Register</button>\r\n            <div style={{ textAlign: 'center', marginTop: 12 }}>\r\n              <span style={{ color: '#555', fontSize: '0.98rem' }}>Already have an account? <a href=\"/login\" style={{ color: '#FFD700', fontWeight: 700, textDecoration: 'none' }}>Login</a></span>\r\n            </div>\r\n          </form>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Register;\r\n","// Basic API utility for making requests\r\n// You can customize this as needed for your project\r\n\r\nconst API_BASE_URL = process.env.REACT_APP_API_BASE_URL || 'https://sabor-espanol-ed87.onrender.com';\r\n\r\nexport async function fetchFromApi(endpoint, options = {}) {\r\n  const res = await fetch(`${API_BASE_URL}${endpoint}`, {\r\n    credentials: 'include',\r\n    ...options,\r\n  });\r\n  if (!res.ok) {\r\n    // Try to parse the error response from the server\r\n    try {\r\n      const errorData = await res.json();\r\n      // Create a new error object with the server's message\r\n      const error = new Error(errorData.message || `API error: ${res.status}`);\r\n      error.data = errorData; // Attach full error data\r\n      throw error;\r\n    } catch (e) {\r\n      // If parsing fails, throw a generic error\r\n      throw new Error(`API error: ${res.status}`);\r\n    }\r\n  }\r\n  return res.json();\r\n}\r\n"],"names":["name","setName","useState","email","setEmail","password","setPassword","phone","setPhone","country","setCountry","React","countryCodes","Tanzania","Kenya","Uganda","Rwanda","Burundi","Nigeria","Ghana","startsWith","prev","replace","loading","setLoading","error","setError","success","setSuccess","navigate","useNavigate","_jsx","style","minHeight","display","alignItems","justifyContent","background","position","children","_jsxs","borderRadius","boxShadow","padding","minWidth","maxWidth","width","backdropFilter","WebkitBackdropFilter","border","color","fontWeight","fontSize","marginBottom","textAlign","marginTop","onSubmit","async","e","preventDefault","data","apiFetch","method","headers","body","JSON","stringify","token","localStorage","setItem","user","setTimeout","window","dispatchEvent","Event","err","flexDirection","gap","type","value","onChange","target","required","placeholder","cursor","href","textDecoration","API_BASE_URL","process","fetchFromApi","endpoint","options","arguments","length","undefined","res","fetch","concat","_objectSpread","credentials","ok","errorData","json","Error","message","status"],"sourceRoot":""}